{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNOihj21EwuYF52hS9DZmeU",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/KasukurthiAbraham/KasukurthiAbraham/blob/main/Introduction_to_numpy.pd\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "cQCFYEJc3XAa"
      },
      "outputs": [],
      "source": [
        "import numpy as np"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Recap\n",
        "arr = np.array([[1,2,3],[4,5,6]])"
      ],
      "metadata": {
        "id": "m7XUBUtn3hMW"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "type(arr)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LgDHSq6U33pK",
        "outputId": "c7aa94d6-af8c-4956-81b9-2de3cee66e2f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "numpy.ndarray"
            ]
          },
          "metadata": {},
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "arr1 = np.random.randint(1,2,(3,1))"
      ],
      "metadata": {
        "id": "sn4P8OEx37rd"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "arr.shape\n",
        "arr1.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uDrBVrH74m-X",
        "outputId": "2a5650f0-c6f9-466f-d5a5-80d9ecbbdf5f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(3, 1)"
            ]
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "result = np.dot(arr,arr1)"
      ],
      "metadata": {
        "id": "5tDHwL-t4xfE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print (result)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2eXUjPYG47Vg",
        "outputId": "8bc9142f-c80b-4352-f265-435bd87509f2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[ 6]\n",
            " [15]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "r1 =np.random.randint(10,20,(3,3))\n",
        "print(r1)"
      ],
      "metadata": {
        "id": "mUh6XJNG5CBB",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "83b13440-8ca8-41f8-f76e-636a3a250427"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[17 12 12]\n",
            " [17 14 16]\n",
            " [11 14 12]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "r2 = np.eye(3)\n",
        "print(r2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JghDSHEC6-HI",
        "outputId": "fd3c56d4-072c-4df8-d445-af2b8209d359"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[1. 0. 0.]\n",
            " [0. 1. 0.]\n",
            " [0. 0. 1.]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "result2 = np.eye(3)\n",
        "print (result2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aEkkqiSK7Eqb",
        "outputId": "92612c51-21ed-4d90-ecad-f937e8f32fc8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[1. 0. 0.]\n",
            " [0. 1. 0.]\n",
            " [0. 0. 1.]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Mathamatical Operations\n",
        "# + - * /\n",
        "t1=np.random.randint(3,6,(3,3))\n",
        "t2=np.random.randint(3,6,(3,3))\n",
        "print(t2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Mm0aK3iQ8k9Q",
        "outputId": "08bdbd2f-d474-451a-9b0f-f7c129a82cf4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[5 3 3]\n",
            " [3 5 4]\n",
            " [5 3 3]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "t3=t1*t2"
      ],
      "metadata": {
        "id": "u6YDIa0a9JqT"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(t3)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZOWk7Xkv9pJW",
        "outputId": "9a72a022-0ed8-4ee8-8aaf-8f4f5f9a77bd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[25  9 15]\n",
            " [15 25 16]\n",
            " [20 15  9]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# Matrix Multiplication\n",
        "result = np.dot(arr, arr1)  # Swapped arr1 and arr"
      ],
      "metadata": {
        "id": "Xw-tcfgp9iK5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "#Statistical operation\n",
        "mean = t3.mean()\n",
        "max = t3.max()\n",
        "median = np.median(t3) # Changed from t3.median() to np.median(t3)\n",
        "std = np.std(t3)\n",
        "war = np.var(t3)"
      ],
      "metadata": {
        "id": "npKfaMri-BP-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(median)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lwpLYuTk-c9U",
        "outputId": "7609106a-cf79-4c3b-9f6a-d4ed8aa09d31"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "15.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(war) # Changed from 'var' to 'war' to print the variance"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kHG5MSDH-7K8",
        "outputId": "208f341b-b9ae-4e2d-eee2-91b6f9ccfbeb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "30.691358024691358\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(std)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7OatuSro-_qM",
        "outputId": "9aefd07d-ce49-49bc-8fc4-598d27429819"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5.539978161030182\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "arr=np.array([1,2,3,4,5,6])\n",
        "\n",
        "# Reshape the array\n",
        "reshapedarr = arr. reshape(3,2)\n",
        "\n",
        "print(reshapedarr)\n",
        "\n",
        "# Concert/Flattrn any n din array\n",
        "flattenedarr  = arr.flatten()\n",
        "\n",
        "print(flattenedarr)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xum5lJ6xAh9K",
        "outputId": "7b165221-f3ab-4ee9-c1bb-0ac7813ff9cc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[1 2]\n",
            " [3 4]\n",
            " [5 6]]\n",
            "[1 2 3 4 5 6]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Trigonometric functions\n",
        "# sin(x)\n",
        "# cos(x)\n",
        "# Tan(x)- sin(x)/cos(x)\n",
        "# cosec - 1/sin(x)\n",
        "# sec - 1/ cos(x)\n",
        "# cot - 1/ tan(x)"
      ],
      "metadata": {
        "id": "_K_9cYEABl8i"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Stacking the data\n",
        "\n",
        "arr1 = np.array([1,2,3,4])\n",
        "arr2 = np.array([10,20,30,40])\n",
        "\n",
        "\n",
        "#vertical stacking\n",
        "arr3 = np.vstack((arr1, arr2))\n",
        "print(f\"The shape of arr3 is {arr3.shape}\")\n",
        "\n",
        "\n",
        "#Horizantal stacking\n",
        "arr4 = np.vstack((arr1, arr2))\n",
        "print(f\"The shape of arr4 is {arr4.shape}\")\n",
        "\n",
        "print(arr4)"
      ],
      "metadata": {
        "id": "clY6xh9NDoJy",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e8b1f93d-9996-4ea0-8e7a-354589d4bfe8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The shape of arr3 is (2, 4)\n",
            "The shape of arr4 is (2, 4)\n",
            "[[ 1  2  3  4]\n",
            " [10 20 30 40]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Filtering\n",
        "arr = np.array([10,20,30,40,50,60,70,80])\n",
        "\n",
        "farr = arr[arr > 40]\n",
        "\n",
        "print (farr)"
      ],
      "metadata": {
        "id": "TWtiWayDGHWW",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e25cbf12-0b0e-40b4-ca4b-5ff1326242ed"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[50 60 70 80]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "HCBjBBRDHdTN"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}